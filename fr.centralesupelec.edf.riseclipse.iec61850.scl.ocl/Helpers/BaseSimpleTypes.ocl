/**
 *  Copyright (c) 2017 CentraleSupélec & EDF.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  This file is part of the RiseClipse tool
 *  
 *  Contributors:
 *      Computer Science Department, CentraleSupélec
 *      EDF R&D
 *  Contacts:
 *      dominique.marcadet@centralesupelec.fr
 *      aurelie.dehouck-neveu@edf.fr
 *  Web site:
 *      http://wdi.supelec.fr/software/RiseClipse/
 */

-----------------------------------------------------------

context ocl::String

def: validSclRef() : Boolean =
    self.matches( '.+/.+/.+/.+(/.+)*' )

def: validSclAnyName() : Boolean =
    true
 
def: validSclName() : Boolean =
    if( self.validSclAnyName() ) then
        self.size() >= 1
    else
        false
    endif

def: validSclAcsiName() : Boolean =
    if( self.validSclName() ) then
        self.matches( '[A-Za-z][0-9A-Za-z_]*' )
    else
        false
    endif

def: validSclRestrName1stU() : Boolean =
    if( self.validSclName() ) then
        self.matches( '[A-Z][0-9A-Za-z]*' )
    else
        false
    endif

def: validSclRestrName1stL() : Boolean =
    if( self.validSclName() ) then
        self.matches( '[a-z][0-9A-Za-z]*' )
    else
        false
    endif

def: validSclPAddr() : Boolean =
    self.size() >= 1

def: validSclVersion() : Boolean =
    if( self.validSclName() ) then
        self.matches( '2[0-2][0-9]{2}' )
    else
        false
    endif
 
def: validSclRevision() : Boolean =
    if( self.validSclName() ) then
        self.matches( '[A-Z]' )
    else
        false
    endif

-----------------------------------------------------------

context ocl::Integer
 
def: validSclRelease() : Boolean =
    self >= 0 and self <= 255

-----------------------------------------------------------

context ocl::String

def: validSclEmpty() : Boolean =
    self.size() <= 0

def: validSclIEDName() : Boolean =
    if( self.validSclVisibleBasicLatin() ) then
        self.size() >= 1 and self.size() <= 129
    else
        false
    endif
 
def: validSclOnlyRelativeIEDName() : Boolean =
    -- XSD: <xs:pattern value="&#x0040;"/>
    self.matches( '\u0040' )

def: validSclIEDNameOrRelative() : Boolean =
    if( self.validSclIEDName() ) then
        true
    else
        self.validSclOnlyRelativeIEDName()
    endif

def: validSclLDName() : Boolean =
    self.matches( '[A-Za-z][0-9A-Za-z_]{0,63}' )
 
def: validSclLDInst() : Boolean =
    self.matches( '[A-Za-z0-9][0-9A-Za-z_]{0,63}' )
 
def: validSclLDInstOrEmpty() : Boolean =
    if( self.validSclEmpty() ) then
        true
    else
        self.validSclLDInst()
    endif

def: validSclPrefix() : Boolean =
    if( self = '' ) then
        true
    else
        self.matches( '[A-Za-z][0-9A-Za-z_]{0,10}' )
    endif
 
def: validSclLNInst() : Boolean =
    self.matches( '[0-9]{1,12}' )
 
def: validSclLNInstOrEmpty() : Boolean =
    if( self.validSclEmpty() ) then
        true
    else
        self.validSclLNInst()
    endif

def: validSclDataName() : Boolean =
    if( self.validSclRestrName1stU() ) then
        self.size() <= 12
    else
        false
    endif
 
def: validSclDataSetName() : Boolean =
    if( self.validSclAcsiName() ) then
        self.size() <= 32
    else
        false
    endif
 
def: validSclCBName() : Boolean =
    if( self.validSclAcsiName() ) then
        self.size() <= 32
    else
        false
    endif
 
def: validSclLogName() : Boolean =
    if( self.validSclAcsiName() ) then
        self.size() <= 32
    else
        false
    endif
 
def: validSclAccessPointName() : Boolean =
    self.matches( '[A-Za-z0-9][0-9A-Za-z_]*' )

def: validSclAssociationID() : Boolean =
    self.matches( '[0-9A-Za-z]+' )

def: validSclVisibleBasicLatin() : Boolean =
    -- XSD: <xs:pattern value="[&#x0020;-&#x007E;]*"/>
    -- using \u0020 because \x20 is not recognized
    self.matches( '[\u0020-\u007E]*' )

def: validSclMessageID() : Boolean =
    if( self.validSclVisibleBasicLatin() ) then
        self.size() <= 64
    else
        false
    endif

def: validSclFullAttributeName() : Boolean =
    -- XSD: <xs:pattern value="[a-zA-Z][a-zA-Z0-9]*(\([0-9]+\))?(\.[a-zA-Z][a-zA-Z0-9]*(\([0-9]+\))?)*"/>
    self.matches( '[a-zA-Z][a-zA-Z0-9]*(\u0028[0-9]+\u0029)?(\u002E[a-zA-Z][a-zA-Z0-9]*(\u0028[0-9]+\u0029)?)*' )

def: validSclFullDOName() : Boolean =
    -- XSD: <xs:pattern value="[A-Z][0-9A-Za-z]{0,11}(\.[a-z][0-9A-Za-z]*(\([0-9]+\))?)?"/>
    self.matches( '[A-Z][0-9A-Za-z]{0,11}(\u002E[a-z][0-9A-Za-z]*(\u0028[0-9]+\u0029)?)?' )
 
def: validSclSubDataName() : Boolean =
    if( self.validSclRestrName1stL() ) then
        self.size() >= 1 and self.size() <= 60
    else
        false
    endif

def: validSclNamespaceName() : Boolean =
    -- XSD: <xs:pattern value="[&#x0020;-&#x007E;]+:20\d\d[A-Z]?"/>
    -- \d not recognized ?
    self.matches( '[\u0020-\u007E]+:20[0-9][0-9][A-Z]?' )

def: validSclLineType() : Boolean =
    self.size() >= 1

def: validSclProcessType() : Boolean =
    self.size() >= 1

def: validSclProcessName() : Boolean =
    self.matches( '.+(/.+)*' )
 

