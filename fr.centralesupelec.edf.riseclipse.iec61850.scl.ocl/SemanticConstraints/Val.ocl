/**
 *  Copyright (c) 2017 CentraleSupélec & EDF.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  This file is part of the RiseClipse tool
 *  
 *  Contributors:
 *      Computer Science Department, CentraleSupélec
 *      EDF R&D
 *  Contacts:
 *      dominique.marcadet@centralesupelec.fr
 *      aurelie.dehouck-neveu@edf.fr
 *  Web site:
 *      http://wdi.supelec.fr/software/RiseClipse/
 */
import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context Val

    inv Val_enum_value_valid
    ( 'Value of Val is invalid according to Enum (line ' + self.lineNumber.toString() + ')' )
    :
        if( self.DAI = null ) then
            true
        else if( self.DAI.DOI = null ) then
            true
        else
            let do : DO = self.DAI.DOI.AnyLN.RefersToLNodeType.DO->select( do : DO | do.name = self.DAI.DOI.name )->any( true ) in
            let da : DA = do.RefersToDOType.DA->select( da : DA | da.name = self.DAI.name )->any( true ) in
            if( da.RefersToEnumType <> null ) then
                da.RefersToEnumType.EnumVal.value->includes( self.value )
            else
                true
            endif
        endif endif
   

endpackage

